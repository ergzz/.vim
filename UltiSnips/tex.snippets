global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC', 'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES', 'AmsFS', 'AmsGS' ]]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet template "Basic Template"
\documentclass[a4paper, 11pt, oneside]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[french]{babel}
\usepackage{a4wide}
\usepackage[colorlinks]{hyperref}
\hypersetup{linkcolor = black}
\hypersetup{citecolor = blue}
\hypersetup{urlcolor = black}

\usepackage{fancyhdr}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{enumitem}
\usepackage{listings}
\usepackage{xcolor}
\usepackage{colortbl}

\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}

\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,
    breaklines=true,
    captionpos=b,
    keepspaces=true,
    numbers=left,
    numbersep=5pt,
    showspaces=false,
    showstringspaces=false,
    showtabs=false,
    tabsize=2
}

\lstset{
style=mystyle,
inputencoding=utf8,
literate=%
    {é}{{\'e}}{1}%
    {è}{{\`e}}{1}%
    {à}{{\`a}}{1}%
}

\begin{document}
	$0
\end{document}
endsnippet

snippet cover "Cover page for report"
\begin{center}
\includegraphics[scale=0.2]{/home/eva/Images/unilogo}

\vspace{10mm}

{\large Bachelor en mathématiques}

\vspace{5mm}

{\large ${1:subject}}

\vspace{5mm}

{\large ${2:date}}

\vspace{5mm}

\rule{\linewidth}{0.5mm}

\vspace{4mm}

{\huge \textbf{${3:title}}}

\vspace{4mm}

\rule{\linewidth}{0.5mm} 

\vspace{15mm}

\large
\emph{Auteur:}

\vspace{1mm}

Eva \textsc{Ragazzini} 

\vspace{15mm}

\emph{Superviseurs:}
\end{center}

\normalsize 

\newpage
endsnippet

snippet beg "begin{} / end{}"
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet table "table environment"
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" 
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" 
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize"
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet i "Item"
\item $0
endsnippet

snippet pac "Package" 
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet md "Math dollar" 
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet ml "Math line" 
\[
${1:${VISUAL}}
.\] $0
endsnippet

context "math()"
snippet pmat "pmat" 
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet sum "sum" 
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet lim "limit" 
\lim_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet sq "\sqrt{}" 
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet <= "leq" 
\leq
endsnippet

context "math()"
snippet >= "geq"
\geq
endsnippet

context "math()"
snippet // "fraction"
\\frac{$1}{$2}$0
endsnippet
